name: Version Bump

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  bump-version:
    runs-on: ubuntu-latest
    # Skip if commit is from dependabot, GitHub Actions, or is already a version bump
    if: "!contains(github.event.head_commit.author.name, 'dependabot') && !contains(github.event.head_commit.message, 'chore: bump version') && !contains(github.event.head_commit.author.name, 'GitHub Actions')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      
      # Add a check for recent version bumps to prevent multiple bumps in quick succession
      - name: Check for recent version bumps
        id: recent-bumps
        run: |
          # Get timestamp of the last version bump commit (in seconds since epoch)
          LAST_BUMP_TIME=$(git log -1 --format=%ct --grep="chore: bump version" || echo 0)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LAST_BUMP_TIME))
          
          # If a version bump happened in the last 5 minutes (300 seconds), set skip flag
          if [[ $TIME_DIFF -lt 300 ]]; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
            echo "Too soon after last version bump, skipping remaining steps"
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
            echo "No recent version bumps found, proceeding"
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
      
      - name: Determine version bump type
        id: bump-type
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == *"BREAKING CHANGE"* ]] || [[ "$COMMIT_MSG" == *"major"* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == *"feat"* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Bump version
        id: version-bump
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Validate version format
          if [[ ! "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format in package.json. Expected semantic versioning (x.y.z), got '$CURRENT_VERSION'."
            exit 1
          fi
          
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          if [[ "${{ steps.bump-type.outputs.bump }}" == "major" ]]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ steps.bump-type.outputs.bump }}" == "minor" ]]; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update root package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Update library package.json
          cd libs/ngx-multi-level-push-menu
          npm version $NEW_VERSION --no-git-tag-version
      
      - name: Commit version bump
        if: steps.recent-bumps.outputs.should_skip != 'true'
        run: |
          git add package.json libs/ngx-multi-level-push-menu/package.json
          git commit -m "chore: bump version to ${{ steps.version-bump.outputs.new_version }}"
          git tag v${{ steps.version-bump.outputs.new_version }}
      
      - name: Push changes
        if: steps.recent-bumps.outputs.should_skip != 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          branch: master
          tags: true